<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assingment1</name>
    </assembly>
    <members>
        <member name="T:TPP.LinkedList.LinkedListClass">
            <summary>
            Class containing the LinkedList
            </summary>
        </member>
        <member name="M:TPP.LinkedList.LinkedListClass.#ctor(System.Int32)">
            <summary>
            Constructor given an integer node value that will define the head of the Linked List
            </summary>
            <param name="headValue"> Ineteger expected to be the value of the head of the linked list</param>
        </member>
        <member name="M:TPP.LinkedList.LinkedListClass.#ctor(System.Int32[])">
            <summary>
            Constructor that builds a linked list from an array of values
            </summary>
            <param name="nodesValues">Array contining the values to be inserted </param>
            <exception cref="T:System.ArgumentNullException"> Thrown when the received array is null</exception>
        </member>
        <member name="M:TPP.LinkedList.LinkedListClass.Add(System.Int32)">
            <summary>
            Given an integer value to add, it will be added to the end of the Linked List
            </summary>
            <param name="nodeValue"> value of the node we want to add</param>
        </member>
        <member name="M:TPP.LinkedList.LinkedListClass.Add(System.Int32[])">
            <summary>
            Given an integer array to add, they will be added to the end of the Linked List
            </summary>
            <param name="nodeValues"> value of the node we want to add</param>
            <exception cref="T:System.ArgumentNullException"> If the provided array is null</exception>
        </member>
        <member name="M:TPP.LinkedList.LinkedListClass.Remove(System.Int32)">
            <summary>
            Given an integer value, this method will remove the first instace of that value that is found in the Linked List
            </summary>
            <param name="nodeValue"> integer value of the element to remove</param>
        </member>
        <member name="M:TPP.LinkedList.LinkedListClass.getElement(System.Int32)">
            <summary>
            Given a value, this method will return the frist instance of a node containing that value
            </summary>
            <param name="nodeValue"> value that we are expecting to find</param>
            <returns> The first Node containing that value. Null if the element was not found</returns>
        </member>
        <member name="P:TPP.LinkedList.LinkedListClass.NumberOfElements">
            <summary>
            Property for the number of elements atribute
            </summary>
        </member>
        <member name="M:TPP.LinkedList.LinkedListClass.ToString">
            <inheritdoc/>
        </member>
        <member name="M:TPP.LinkedList.Node.#ctor(System.Int32)">
            <summary>
            Constructor for the class node, receiving the value it will have stored. When the node is created their next Node will be set to be null
            </summary>
            <param name="value"> As the Integer value this node will represent</param>
        </member>
        <member name="M:TPP.LinkedList.Node.AddLink(TPP.LinkedList.Node)">
            <summary>
            Given a node, this method will assing if possible the 'next' attribute to the Node provided
            </summary>
            <param name="nextNode"> Node that is expected to follow the tail</param>
        </member>
    </members>
</doc>
