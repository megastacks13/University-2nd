void Sort(Comparable[] vector) {
	for (int i=0; i<vector.Length-‐1; i++)
		for (int j=vector.Length-‐1; j>i; j-‐-‐)
			if (vector[i].CompareTo(vector[j]) > 0) {
				int temp = vector[i];
				vector[i] = vector[j];
				vector[j] = temp;
}

Angle compareTo implementation:

//This CompareTo MUST receive an OBJECT type

public override int CompareTo(Object object){
	try{
		Angle obj = (Angle) object;
	} catch (Exception e) throw new Exception(f"Invalid data type. You cannot compare a {object.type} with an angle")
	
	if (this.radians > obj.radians) return -1;
	else if (this.radians == obj.angle) return 0;
	else return 1;
	
}



////////////////////////
	Activity 2
This exercise will showcase how a 'Comparator' works

interface Comparator{

	public virtual int Compare(Object, Object);

}

class CompareToPeopleID : Comparator{

	public override Compare(Object o1, Object o2){
		// Code that divides the id into two parts and compare first the numerical
 		//part and lastly the string part.
		Person p1 = (Person) o1;
		Person p2 = (Person) o2;
		
		return p1.id > (p2.id) ? 1 : p1.id == p2.id? 0: -1
	}
}


















